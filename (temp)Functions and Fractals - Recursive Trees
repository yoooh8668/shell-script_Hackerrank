#!/bin/bash
read N

LAYER=5

#SQUARE_7 means 2^(7-LAYER), SQUARE_5 means 2^(5-LAYER), 
SQUARE_7=$[ 2** $[7 - $LAYER]]
SQUARE_6=$[ 2** $[6 - $LAYER]]
SQUARE_5=$[ 2** $[5 - $LAYER]]  #often use as sector
#printf "SQUARE_7 =$SQUARE_7, SQUARE_5= $SQUARE_5\n"

#START_1 and END_1 is for sector 1 (rising)
START_1=20
END_1=80

#START_2 and END_2 is for sector 2 (separating)
START_2=19
END_2=81
OFFSET=0

for ((i=1;i<64;i++))
do
    #printf "i= $i\n"
    
    #sector 1 (rising)
    if [[ $i -ge $[$SQUARE_7 - $SQUARE_5] ]];then
        TAR_PRINT=$START_1
        for ((j=1;j<=101;j++))
        do
            if [ $j -eq $TAR_PRINT ] && [ $j -le $END_1 ] ;then
                if [[ $N -ge $LAYER ]];then  #if (N<LAYER) not need to print
                    printf "1"
                else
                    printf "_"
                fi
                TAR_PRINT=$[$TAR_PRINT + $SQUARE_7]
            else
                printf "_"
            fi
        done
    #sector 2 (separating)
    else
        DIR=0 #judge if it is shift for left or right.
        #DIR=0 shift right, DIR=1 shift left
        $TAR_PRINT=$START_2
        for ((j=1;j<=101;j++))
        do
            if [ $DIR -eq 0 ];then
                #shift right
                DIR=1
            else
                #shift left
                DIR=0
            fi                        
        done
        OFFSET=$[$OFFSET + 1]
    fi
    
    if [[ $i -eq $[$SQUARE_7 - 1] ]];then
        LAYER=$[$LAYER - 1]
        SQUARE_7=$[$SQUARE_7 * 2]
        SQUARE_5=$[$SQUARE_5 * 2] 
        START_1=$[ $START_1 + $SQUARE_5 ]
        END_1=$[ $END_1 - $SQUARE_5 ]
        START_2=$[ $START_2 + $SQUARE_5 ]
        END_2=$[ $END_2 - $SQUARE_5 ]
        OFFSET=0
        printf "Now is LAYER=$LAYER, START_1=$START_1, END_1=$END_1"

    fi
    printf "\n"
done
